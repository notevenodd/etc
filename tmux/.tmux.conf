# My configuration file for tmux(1)
# This confi file is very much a work in progress, not quite complete yet.
# And problably need some cleanup


################################################################################
# COLOR SETUP                                                                  #
#                                                                              #
#I took a solarized coloring (which I then tweak'ed) mostly from here:         #
#https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf#
################################################################################
#                                                                              #
# As a reminder, here are the solarized colors and the associated index that   #
# approximate them best in the default (ie xterm-based) 256 color palette.     #
#______________________________________________________________________________#
# GREY     |     dark bg     |      content tones      |        light bg       #
# TONES:   | base03 | base02 | base01 | base00 | base0 | base1 | base2 | base3 #
#          |  234   |  235   |  240   |  241   |  244  |  245  |  250  |  230  #
#----------+--------+--------+--------+--------+-------+-------+-------+-------#
# COLORS:  | yellow | orange |  red   |magenta |violet | blue  | cyan  | green #
# (accents)|  136   |  166   |  160   |  125   |  61   |  33   |  37   |  64   #
################################################################################

set -g status-bg magenta # status bar bg
set -g status-fg white   # status bar fg
# highlighting current window
set-window-option -g window-status-current-bg yellow

# it looks like now, the preferred way to set up colors and style
# is with *-style fg=...,...,bg=...,.. (look at 'man tmux')
# ansi colors 1..8 have names, for others use colourXXX
set-option -g mode-style fg=colour230,bg=colour33

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-style fg=colour166,bg=colour235 #fg:base02/bg:orange
#>set-option -g message-bg colour235 #base02
#>set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red


################################################################################
# NON COLORS SETUP
################################################################################
#
# A few places where I took some inspiration from
# * here: http://lukaszwrobel.pl/blog/tmux-tutorial-split-terminal-windows-easily
# * and several of the youtube videos of gotbletu
################################################################################


# To refresh tmux to take some new settings into account, restart it, or type:
# tmux source-file .tmux.conf
# (or I also binded R to reloading this config file)

#default prefix (Ctrl+b) is pretty awkward => use Ctrl+a (like screen)
unbind C-b
set -g prefix C-a

# Allow C-A a to send C-A to application. Useful!!!
bind C-a send-prefix

# C-a + R => reload the .tmux.conf file
bind-key R source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# When I switch panes using ^A-arrow, and then immediately press arrow-up (to
# get a command from history, for example), the window pane switches again. This
# can be useful to move through multiple panes quickly, but for me it's a pain
# since I keep ending up in panes I never meant to be in. That happens because
# the default bindings for the arrow keys are setup with bind-key -r (specifying
# that they may be repeated). We can change the bindings to use bind-key without
# the -r option:
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R



# Allow using mouse
set-option -g mode-mouse on
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on


# I put this so tmux can pass shift+arrows to programs inside tmux
set-window-option -g xterm-keys on

# enable native terminal scrolling
# http://superuser.com/questions/209437/how-do-i-scroll-in-tmux
# (otherwise use C-a [ to go to scrolln mode and q to quit)
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Start windows and panes index of 1 instead of 0
# (zero-based indexing is great in programming languages, but
#  not so in tmux as 0 is on the other side of the keyboard!)
set-option -g base-index 1
setw -g pane-base-index 1

# Activity Monitoring
# If you have many tmux windows opened, you might want to get notified
# when something happens inside other windows.
setw -g monitor-activity on
set -g visual-activity on

# screensaver / run command on idle (after 5mins)
# I comment this out for the time being
# set -g lock-after-time 500
# set -g lock-command "/usr/bin/cmatrix"
#        ^-- fun, but too distracting (and wasting CPU)


# causes tmux to resize a window based on the smallest client actually viewing
# it, not on the smallest one attached to the entire session.
set-window-option -g aggressive-resize on

# clipboard support (use xclip(1))
# TODO: we need to change this to support Termux, etc.
bind C-v run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"

# allow the title bar of the terminal to change
set -g set-titles on
set -g set-titles-string "#T"

# increase time during which notification are readable
set-option -g display-time 2000
