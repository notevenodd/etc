#!/bin/sh

#######################################################################
#
# Usage: $0
# prints a colored ASCII art logo of the Linux penguin (Tux)
# $0       => display the logo
# ... | $0 => "cat" stding and display "Tux" as left margin
#
# this shell script is intended as a poorman's
# replacement of cowsay(1). This script is dumb
# though, if stdin lines wrapping on the terminal,
# it will destroy the prettiness.

#######################################################################
# NOTE / CREDITS:
#
# I combined two different ASCII art representation of tux taken from
# https://asciiart.website/index.php?art=logos%20and%20insignias/linux
#
#  the top of:    +  the bottom of:  =    my result!
#                        _._
#     .--.              /_ _`.               .--.
#    |o_o |             (.X.)|              |o_o |
#    |:_/ |             |\_/'|              |:_/ |
#   //   \ \     .      )____`\     __     //   \ \
#  (|     | )   -+-    //_V _\ \    __    ((     (_)
# /'\_   _/`\    '    ((  |  `(_)        / \}    / \
# \___)=(___/        / \> '   / \        \  \._./  /
#                    \  \.__./  /         `-'   `-'
#               rs/VK `-'    `-'
#
#######################################################################


if [ $# -ne 0 ]; then
   usage "$0" | "$0"
   exit 1
fi

P() { IFS= read -r L; printf '%b %s\n' "$1" "$L"; }
A() { awk -v X="$1" '{print X, $0}' ;}

tux() {
  P '    .--.   '
  P '   |\033[32mo\033[33m_\033[32mo\033[0m |  '
  P '   |\033[33m:_/\033[0m |  '
  P '  //   \ \ '
  P ' ((     (_)'
  P '\033[33m/ \\\033[0m}    \033[33m/ \\\033[0m'
  P '\033[33m\  \\\033[0m._.\033[33m/  /\033[0m'
  P " \033[33m\`-'   \`-'\033[0m "
  A '           '
}

if [ -t 0 ]
   then echo | tux
   else tux
fi
